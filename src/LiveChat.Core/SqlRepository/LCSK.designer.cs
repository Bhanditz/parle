#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LiveChat.Core.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LCSK")]
	public partial class LCSKDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLCSK_CannedMessage(LCSK_CannedMessage instance);
    partial void UpdateLCSK_CannedMessage(LCSK_CannedMessage instance);
    partial void DeleteLCSK_CannedMessage(LCSK_CannedMessage instance);
    partial void InsertLCSK_WebRequest(LCSK_WebRequest instance);
    partial void UpdateLCSK_WebRequest(LCSK_WebRequest instance);
    partial void DeleteLCSK_WebRequest(LCSK_WebRequest instance);
    partial void InsertLCSK_ChatMessage(LCSK_ChatMessage instance);
    partial void UpdateLCSK_ChatMessage(LCSK_ChatMessage instance);
    partial void DeleteLCSK_ChatMessage(LCSK_ChatMessage instance);
    partial void InsertLCSK_ChatRequest(LCSK_ChatRequest instance);
    partial void UpdateLCSK_ChatRequest(LCSK_ChatRequest instance);
    partial void DeleteLCSK_ChatRequest(LCSK_ChatRequest instance);
    partial void InsertLCSK_Department(LCSK_Department instance);
    partial void UpdateLCSK_Department(LCSK_Department instance);
    partial void DeleteLCSK_Department(LCSK_Department instance);
    partial void InsertLCSK_Operator(LCSK_Operator instance);
    partial void UpdateLCSK_Operator(LCSK_Operator instance);
    partial void DeleteLCSK_Operator(LCSK_Operator instance);
    partial void InsertLCSK_Operators_Department(LCSK_Operators_Department instance);
    partial void UpdateLCSK_Operators_Department(LCSK_Operators_Department instance);
    partial void DeleteLCSK_Operators_Department(LCSK_Operators_Department instance);
    partial void InsertLCSK_QuickLink(LCSK_QuickLink instance);
    partial void UpdateLCSK_QuickLink(LCSK_QuickLink instance);
    partial void DeleteLCSK_QuickLink(LCSK_QuickLink instance);
    partial void InsertLCSK_Visitor(LCSK_Visitor instance);
    partial void UpdateLCSK_Visitor(LCSK_Visitor instance);
    partial void DeleteLCSK_Visitor(LCSK_Visitor instance);
    #endregion
		
		public LCSKDataContext() : 
				base(global::LiveChat.Core.Properties.Settings.Default.LCSKConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LCSKDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LCSKDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LCSKDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LCSKDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LCSK_CannedMessage> LCSK_CannedMessages
		{
			get
			{
				return this.GetTable<LCSK_CannedMessage>();
			}
		}
		
		public System.Data.Linq.Table<LCSK_WebRequest> LCSK_WebRequests
		{
			get
			{
				return this.GetTable<LCSK_WebRequest>();
			}
		}
		
		public System.Data.Linq.Table<LCSK_ChatMessage> LCSK_ChatMessages
		{
			get
			{
				return this.GetTable<LCSK_ChatMessage>();
			}
		}
		
		public System.Data.Linq.Table<LCSK_ChatRequest> LCSK_ChatRequests
		{
			get
			{
				return this.GetTable<LCSK_ChatRequest>();
			}
		}
		
		public System.Data.Linq.Table<LCSK_Department> LCSK_Departments
		{
			get
			{
				return this.GetTable<LCSK_Department>();
			}
		}
		
		public System.Data.Linq.Table<LCSK_Operator> LCSK_Operators
		{
			get
			{
				return this.GetTable<LCSK_Operator>();
			}
		}
		
		public System.Data.Linq.Table<LCSK_Operators_Department> LCSK_Operators_Departments
		{
			get
			{
				return this.GetTable<LCSK_Operators_Department>();
			}
		}
		
		public System.Data.Linq.Table<LCSK_QuickLink> LCSK_QuickLinks
		{
			get
			{
				return this.GetTable<LCSK_QuickLink>();
			}
		}
		
		public System.Data.Linq.Table<LCSK_Visitor> LCSK_Visitors
		{
			get
			{
				return this.GetTable<LCSK_Visitor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LCSK_CannedMessages")]
	public partial class LCSK_CannedMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OperatorId;
		
		private string _Name;
		
		private string _Message;
		
		private bool _ShowPrompt;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperatorIdChanging(System.Guid value);
    partial void OnOperatorIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnShowPromptChanging(bool value);
    partial void OnShowPromptChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    #endregion
		
		public LCSK_CannedMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowPrompt", DbType="Bit NOT NULL")]
		public bool ShowPrompt
		{
			get
			{
				return this._ShowPrompt;
			}
			set
			{
				if ((this._ShowPrompt != value))
				{
					this.OnShowPromptChanging(value);
					this.SendPropertyChanging();
					this._ShowPrompt = value;
					this.SendPropertyChanged("ShowPrompt");
					this.OnShowPromptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LCSK_WebRequests")]
	public partial class LCSK_WebRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _VisitorId;
		
		private System.DateTime _RequestedDate;
		
		private string _Page;
		
		private string _DomainName;
		
		private string _Referrer;
		
		private EntityRef<LCSK_Visitor> _LCSK_Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnRequestedDateChanging(System.DateTime value);
    partial void OnRequestedDateChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnDomainNameChanging(string value);
    partial void OnDomainNameChanged();
    partial void OnReferrerChanging(string value);
    partial void OnReferrerChanged();
    #endregion
		
		public LCSK_WebRequest()
		{
			this._LCSK_Visitor = default(EntityRef<LCSK_Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					if (this._LCSK_Visitor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime RequestedDate
		{
			get
			{
				return this._RequestedDate;
			}
			set
			{
				if ((this._RequestedDate != value))
				{
					this.OnRequestedDateChanging(value);
					this.SendPropertyChanging();
					this._RequestedDate = value;
					this.SendPropertyChanged("RequestedDate");
					this.OnRequestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string DomainName
		{
			get
			{
				return this._DomainName;
			}
			set
			{
				if ((this._DomainName != value))
				{
					this.OnDomainNameChanging(value);
					this.SendPropertyChanging();
					this._DomainName = value;
					this.SendPropertyChanged("DomainName");
					this.OnDomainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referrer", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string Referrer
		{
			get
			{
				return this._Referrer;
			}
			set
			{
				if ((this._Referrer != value))
				{
					this.OnReferrerChanging(value);
					this.SendPropertyChanging();
					this._Referrer = value;
					this.SendPropertyChanged("Referrer");
					this.OnReferrerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_Visitor_LCSK_WebRequest", Storage="_LCSK_Visitor", ThisKey="VisitorId", OtherKey="Id", IsForeignKey=true)]
		public LCSK_Visitor LCSK_Visitor
		{
			get
			{
				return this._LCSK_Visitor.Entity;
			}
			set
			{
				LCSK_Visitor previousValue = this._LCSK_Visitor.Entity;
				if (((previousValue != value) 
							|| (this._LCSK_Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LCSK_Visitor.Entity = null;
						previousValue.LCSK_WebRequests.Remove(this);
					}
					this._LCSK_Visitor.Entity = value;
					if ((value != null))
					{
						value.LCSK_WebRequests.Add(this);
						this._VisitorId = value.Id;
					}
					else
					{
						this._VisitorId = default(System.Guid);
					}
					this.SendPropertyChanged("LCSK_Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LCSK_ChatMessages")]
	public partial class LCSK_ChatMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RequestId;
		
		private string _Name;
		
		private string _Message;
		
		private System.DateTime _Posted;
		
		private EntityRef<LCSK_ChatRequest> _LCSK_ChatRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRequestIdChanging(System.Guid value);
    partial void OnRequestIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnPostedChanging(System.DateTime value);
    partial void OnPostedChanged();
    #endregion
		
		public LCSK_ChatMessage()
		{
			this._LCSK_ChatRequest = default(EntityRef<LCSK_ChatRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._LCSK_ChatRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Posted", DbType="DateTime NOT NULL")]
		public System.DateTime Posted
		{
			get
			{
				return this._Posted;
			}
			set
			{
				if ((this._Posted != value))
				{
					this.OnPostedChanging(value);
					this.SendPropertyChanging();
					this._Posted = value;
					this.SendPropertyChanged("Posted");
					this.OnPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_ChatRequest_LCSK_ChatMessage", Storage="_LCSK_ChatRequest", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public LCSK_ChatRequest LCSK_ChatRequest
		{
			get
			{
				return this._LCSK_ChatRequest.Entity;
			}
			set
			{
				LCSK_ChatRequest previousValue = this._LCSK_ChatRequest.Entity;
				if (((previousValue != value) 
							|| (this._LCSK_ChatRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LCSK_ChatRequest.Entity = null;
						previousValue.LCSK_ChatMessage = null;
					}
					this._LCSK_ChatRequest.Entity = value;
					if ((value != null))
					{
						value.LCSK_ChatMessage = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("LCSK_ChatRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LCSK_ChatRequests")]
	public partial class LCSK_ChatRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _VisitorId;
		
		private System.Guid _OperatorId;
		
		private System.Guid _DepartmentId;
		
		private System.DateTime _Requested;
		
		private bool _InitiatedFromVisitor;
		
		private bool _Accepted;
		
		private bool _Closed;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private EntityRef<LCSK_ChatMessage> _LCSK_ChatMessage;
		
		private EntityRef<LCSK_Department> _LCSK_Department;
		
		private EntityRef<LCSK_Operator> _LCSK_Operator;
		
		private EntityRef<LCSK_Visitor> _LCSK_Visitor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnVisitorIdChanging(System.Guid value);
    partial void OnVisitorIdChanged();
    partial void OnOperatorIdChanging(System.Guid value);
    partial void OnOperatorIdChanged();
    partial void OnDepartmentIdChanging(System.Guid value);
    partial void OnDepartmentIdChanged();
    partial void OnRequestedChanging(System.DateTime value);
    partial void OnRequestedChanged();
    partial void OnInitiatedFromVisitorChanging(bool value);
    partial void OnInitiatedFromVisitorChanged();
    partial void OnAcceptedChanging(bool value);
    partial void OnAcceptedChanged();
    partial void OnClosedChanging(bool value);
    partial void OnClosedChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    #endregion
		
		public LCSK_ChatRequest()
		{
			this._LCSK_ChatMessage = default(EntityRef<LCSK_ChatMessage>);
			this._LCSK_Department = default(EntityRef<LCSK_Department>);
			this._LCSK_Operator = default(EntityRef<LCSK_Operator>);
			this._LCSK_Visitor = default(EntityRef<LCSK_Visitor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if ((this._LCSK_Department.HasLoadedOrAssignedValue || this._LCSK_Visitor.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitorId
		{
			get
			{
				return this._VisitorId;
			}
			set
			{
				if ((this._VisitorId != value))
				{
					this.OnVisitorIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorId = value;
					this.SendPropertyChanged("VisitorId");
					this.OnVisitorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					if (this._LCSK_Operator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requested", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Requested
		{
			get
			{
				return this._Requested;
			}
			set
			{
				if ((this._Requested != value))
				{
					this.OnRequestedChanging(value);
					this.SendPropertyChanging();
					this._Requested = value;
					this.SendPropertyChanged("Requested");
					this.OnRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiatedFromVisitor", DbType="Bit NOT NULL")]
		public bool InitiatedFromVisitor
		{
			get
			{
				return this._InitiatedFromVisitor;
			}
			set
			{
				if ((this._InitiatedFromVisitor != value))
				{
					this.OnInitiatedFromVisitorChanging(value);
					this.SendPropertyChanging();
					this._InitiatedFromVisitor = value;
					this.SendPropertyChanged("InitiatedFromVisitor");
					this.OnInitiatedFromVisitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accepted", DbType="Bit NOT NULL")]
		public bool Accepted
		{
			get
			{
				return this._Accepted;
			}
			set
			{
				if ((this._Accepted != value))
				{
					this.OnAcceptedChanging(value);
					this.SendPropertyChanging();
					this._Accepted = value;
					this.SendPropertyChanged("Accepted");
					this.OnAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Closed", DbType="Bit NOT NULL")]
		public bool Closed
		{
			get
			{
				return this._Closed;
			}
			set
			{
				if ((this._Closed != value))
				{
					this.OnClosedChanging(value);
					this.SendPropertyChanging();
					this._Closed = value;
					this.SendPropertyChanged("Closed");
					this.OnClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_ChatRequest_LCSK_ChatMessage", Storage="_LCSK_ChatMessage", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public LCSK_ChatMessage LCSK_ChatMessage
		{
			get
			{
				return this._LCSK_ChatMessage.Entity;
			}
			set
			{
				LCSK_ChatMessage previousValue = this._LCSK_ChatMessage.Entity;
				if (((previousValue != value) 
							|| (this._LCSK_ChatMessage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LCSK_ChatMessage.Entity = null;
						previousValue.LCSK_ChatRequest = null;
					}
					this._LCSK_ChatMessage.Entity = value;
					if ((value != null))
					{
						value.LCSK_ChatRequest = this;
					}
					this.SendPropertyChanged("LCSK_ChatMessage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_Department_LCSK_ChatRequest", Storage="_LCSK_Department", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public LCSK_Department LCSK_Department
		{
			get
			{
				return this._LCSK_Department.Entity;
			}
			set
			{
				LCSK_Department previousValue = this._LCSK_Department.Entity;
				if (((previousValue != value) 
							|| (this._LCSK_Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LCSK_Department.Entity = null;
						previousValue.LCSK_ChatRequest = null;
					}
					this._LCSK_Department.Entity = value;
					if ((value != null))
					{
						value.LCSK_ChatRequest = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("LCSK_Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_Operator_LCSK_ChatRequest", Storage="_LCSK_Operator", ThisKey="OperatorId", OtherKey="Id", IsForeignKey=true)]
		public LCSK_Operator LCSK_Operator
		{
			get
			{
				return this._LCSK_Operator.Entity;
			}
			set
			{
				LCSK_Operator previousValue = this._LCSK_Operator.Entity;
				if (((previousValue != value) 
							|| (this._LCSK_Operator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LCSK_Operator.Entity = null;
						previousValue.LCSK_ChatRequests.Remove(this);
					}
					this._LCSK_Operator.Entity = value;
					if ((value != null))
					{
						value.LCSK_ChatRequests.Add(this);
						this._OperatorId = value.Id;
					}
					else
					{
						this._OperatorId = default(System.Guid);
					}
					this.SendPropertyChanged("LCSK_Operator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_Visitor_LCSK_ChatRequest", Storage="_LCSK_Visitor", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public LCSK_Visitor LCSK_Visitor
		{
			get
			{
				return this._LCSK_Visitor.Entity;
			}
			set
			{
				LCSK_Visitor previousValue = this._LCSK_Visitor.Entity;
				if (((previousValue != value) 
							|| (this._LCSK_Visitor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LCSK_Visitor.Entity = null;
						previousValue.LCSK_ChatRequest = null;
					}
					this._LCSK_Visitor.Entity = value;
					if ((value != null))
					{
						value.LCSK_ChatRequest = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("LCSK_Visitor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LCSK_Departments")]
	public partial class LCSK_Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private EntityRef<LCSK_ChatRequest> _LCSK_ChatRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    #endregion
		
		public LCSK_Department()
		{
			this._LCSK_ChatRequest = default(EntityRef<LCSK_ChatRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_Department_LCSK_ChatRequest", Storage="_LCSK_ChatRequest", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public LCSK_ChatRequest LCSK_ChatRequest
		{
			get
			{
				return this._LCSK_ChatRequest.Entity;
			}
			set
			{
				LCSK_ChatRequest previousValue = this._LCSK_ChatRequest.Entity;
				if (((previousValue != value) 
							|| (this._LCSK_ChatRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LCSK_ChatRequest.Entity = null;
						previousValue.LCSK_Department = null;
					}
					this._LCSK_ChatRequest.Entity = value;
					if ((value != null))
					{
						value.LCSK_Department = this;
					}
					this.SendPropertyChanged("LCSK_ChatRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LCSK_Operators")]
	public partial class LCSK_Operator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _DisplayName;
		
		private string _Email;
		
		private bool _IsOnline;
		
		private bool _IsAdmin;
		
		private bool _IsManager;
		
		private System.DateTime _LastLogin;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private EntitySet<LCSK_ChatRequest> _LCSK_ChatRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnIsManagerChanging(bool value);
    partial void OnIsManagerChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    #endregion
		
		public LCSK_Operator()
		{
			this._LCSK_ChatRequests = new EntitySet<LCSK_ChatRequest>(new Action<LCSK_ChatRequest>(this.attach_LCSK_ChatRequests), new Action<LCSK_ChatRequest>(this.detach_LCSK_ChatRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManager", DbType="Bit NOT NULL")]
		public bool IsManager
		{
			get
			{
				return this._IsManager;
			}
			set
			{
				if ((this._IsManager != value))
				{
					this.OnIsManagerChanging(value);
					this.SendPropertyChanging();
					this._IsManager = value;
					this.SendPropertyChanged("IsManager");
					this.OnIsManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_Operator_LCSK_ChatRequest", Storage="_LCSK_ChatRequests", ThisKey="Id", OtherKey="OperatorId")]
		public EntitySet<LCSK_ChatRequest> LCSK_ChatRequests
		{
			get
			{
				return this._LCSK_ChatRequests;
			}
			set
			{
				this._LCSK_ChatRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LCSK_ChatRequests(LCSK_ChatRequest entity)
		{
			this.SendPropertyChanging();
			entity.LCSK_Operator = this;
		}
		
		private void detach_LCSK_ChatRequests(LCSK_ChatRequest entity)
		{
			this.SendPropertyChanging();
			entity.LCSK_Operator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LCSK_Operators_Departments")]
	public partial class LCSK_Operators_Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DepartmentId;
		
		private System.Guid _OperatorIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIdChanging(System.Guid value);
    partial void OnDepartmentIdChanged();
    partial void OnOperatorInChanging(System.Guid value);
    partial void OnOperatorInChanged();
    #endregion
		
		public LCSK_Operators_Department()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorIn", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OperatorIn
		{
			get
			{
				return this._OperatorIn;
			}
			set
			{
				if ((this._OperatorIn != value))
				{
					this.OnOperatorInChanging(value);
					this.SendPropertyChanging();
					this._OperatorIn = value;
					this.SendPropertyChanged("OperatorIn");
					this.OnOperatorInChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LCSK_QuickLinks")]
	public partial class LCSK_QuickLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OperatorId;
		
		private string _LinkName;
		
		private string _Link;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperatorIdChanging(System.Guid value);
    partial void OnOperatorIdChanged();
    partial void OnLinkNameChanging(string value);
    partial void OnLinkNameChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    #endregion
		
		public LCSK_QuickLink()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OperatorId
		{
			get
			{
				return this._OperatorId;
			}
			set
			{
				if ((this._OperatorId != value))
				{
					this.OnOperatorIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorId = value;
					this.SendPropertyChanged("OperatorId");
					this.OnOperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LinkName
		{
			get
			{
				return this._LinkName;
			}
			set
			{
				if ((this._LinkName != value))
				{
					this.OnLinkNameChanging(value);
					this.SendPropertyChanging();
					this._LinkName = value;
					this.SendPropertyChanged("LinkName");
					this.OnLinkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LCSK_Visitors")]
	public partial class LCSK_Visitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _idAddress;
		
		private string _Browser;
		
		private bool _InChat;
		
		private bool _ProActiveRequest;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private EntitySet<LCSK_WebRequest> _LCSK_WebRequests;
		
		private EntityRef<LCSK_ChatRequest> _LCSK_ChatRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnidAddressChanging(string value);
    partial void OnidAddressChanged();
    partial void OnBrowserChanging(string value);
    partial void OnBrowserChanged();
    partial void OnInChatChanging(bool value);
    partial void OnInChatChanged();
    partial void OnProActiveRequestChanging(bool value);
    partial void OnProActiveRequestChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    #endregion
		
		public LCSK_Visitor()
		{
			this._LCSK_WebRequests = new EntitySet<LCSK_WebRequest>(new Action<LCSK_WebRequest>(this.attach_LCSK_WebRequests), new Action<LCSK_WebRequest>(this.detach_LCSK_WebRequests));
			this._LCSK_ChatRequest = default(EntityRef<LCSK_ChatRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string idAddress
		{
			get
			{
				return this._idAddress;
			}
			set
			{
				if ((this._idAddress != value))
				{
					this.OnidAddressChanging(value);
					this.SendPropertyChanging();
					this._idAddress = value;
					this.SendPropertyChanged("idAddress");
					this.OnidAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Browser", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Browser
		{
			get
			{
				return this._Browser;
			}
			set
			{
				if ((this._Browser != value))
				{
					this.OnBrowserChanging(value);
					this.SendPropertyChanging();
					this._Browser = value;
					this.SendPropertyChanged("Browser");
					this.OnBrowserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InChat", DbType="Bit NOT NULL")]
		public bool InChat
		{
			get
			{
				return this._InChat;
			}
			set
			{
				if ((this._InChat != value))
				{
					this.OnInChatChanging(value);
					this.SendPropertyChanging();
					this._InChat = value;
					this.SendPropertyChanged("InChat");
					this.OnInChatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProActiveRequest", DbType="Bit NOT NULL")]
		public bool ProActiveRequest
		{
			get
			{
				return this._ProActiveRequest;
			}
			set
			{
				if ((this._ProActiveRequest != value))
				{
					this.OnProActiveRequestChanging(value);
					this.SendPropertyChanging();
					this._ProActiveRequest = value;
					this.SendPropertyChanged("ProActiveRequest");
					this.OnProActiveRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="SmallDateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_Visitor_LCSK_WebRequest", Storage="_LCSK_WebRequests", ThisKey="Id", OtherKey="VisitorId")]
		public EntitySet<LCSK_WebRequest> LCSK_WebRequests
		{
			get
			{
				return this._LCSK_WebRequests;
			}
			set
			{
				this._LCSK_WebRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LCSK_Visitor_LCSK_ChatRequest", Storage="_LCSK_ChatRequest", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public LCSK_ChatRequest LCSK_ChatRequest
		{
			get
			{
				return this._LCSK_ChatRequest.Entity;
			}
			set
			{
				LCSK_ChatRequest previousValue = this._LCSK_ChatRequest.Entity;
				if (((previousValue != value) 
							|| (this._LCSK_ChatRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LCSK_ChatRequest.Entity = null;
						previousValue.LCSK_Visitor = null;
					}
					this._LCSK_ChatRequest.Entity = value;
					if ((value != null))
					{
						value.LCSK_Visitor = this;
					}
					this.SendPropertyChanged("LCSK_ChatRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LCSK_WebRequests(LCSK_WebRequest entity)
		{
			this.SendPropertyChanging();
			entity.LCSK_Visitor = this;
		}
		
		private void detach_LCSK_WebRequests(LCSK_WebRequest entity)
		{
			this.SendPropertyChanging();
			entity.LCSK_Visitor = null;
		}
	}
}
#pragma warning restore 1591
