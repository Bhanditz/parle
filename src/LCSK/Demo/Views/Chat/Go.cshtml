@model LCSK.ChatOperator
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Operator Console</title>
    <script language="javascript" type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <script language="javascript" type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js"></script>

    <script type="text/javascript">
        var checkTimerId = 0;
        var chatTimerId = 0;
        var model = null;
        var currentChatId = null;
        var lastMsgId = 0;
        var opName = '@(Model.DisplayName)';

        $(function () {
            checkTimerId = window.setInterval(
            function () {
                var args = '';
                $('.chat-item').each(function (idx, val) {
                    var isSelected = 0;
                    if ($(this).hasClass('selected')) {
                        isSelected = 1;
                    }
                    args += $(this).data('id') + '|' + $(this).data('lastid') + '|' + isSelected + '\n';
                });
                $.post('/chat/go', { id: '@(Model.Id)', data: args }, function (data) {
                    model = data;
                    $('#chat-list').html(model.list);
                    if (currentChatId == null) {
                        $('#chat-session').html(model.visitors);
                    }
                });
            }, 4321);

            $('#chat-list').on({
                click: function () {
                    $('.chat-item').removeClass('selected');
                    $(this).addClass('selected');

                    var id = $(this).data('id');
                    var ip = $(this).data('ip');
                    var vid = $(this).data('vid');

                    currentChatId = id;

                    $('#chat-session').html('<h4>Please wait...</h4>');
                    $.post('/chat/chatsession',
                        {
                            id: id,
                            ip: ip,
                            opId: '@(Model.Id)',
                            opName: opName,
                            visitorId: vid
                        },
                        function (data) {
                            $('#chat-session').html(data);

                            lastMsgId = 0;

                            getMsgs();

                            chatTimerId = window.setInterval(
                                function () {
                                    getMsgs();
                                },
                                3210
                            );
                        }
                    );
                }
            }, '.chat-item:not(.selected)');

            $('.view-visitors').click(function () {
                viewVisitors();
            });
            $('.change-status').click(function () {
                var state = $(this).data('state');
                $(this).data('state', state == 1 ? 0 : 1).text('Current status: ' + (state == 1 ? 'online' : 'offline'));

                $.post('/chat/changestatus', { id: '@(Model.Id)', status: state }, function (data) {
                    if (data == 'failed') {
                        notify('Unable to change your status');
                    }
                });
            });

            $('#chat-session').on({
                keyup: function (e) {
                    if (e.keyCode == 13) {
                        $.post('/chat/addmsg', { id: currentChatId, from: opName, msg: $('#chatText').val() }, function (data) { getMsgs(); });
                        $('#chatText').val('');
                    }
                }
            }, '#chatText');

            $("#chat-session").on({
                click: function () {
                    if (confirm('Closing chat will end the visitor session as well, sure?')) {
                        $.post('/chat/close', { id: currentChatId }, function (data) {
                            if (data == 'ok') {
                                viewVisitors();
                            } else {
                                $('#chatBody').html('Closing chat return an error...');
                            }
                        });
                    }
                }
            }, '#closeChat');
        });

        function notify(msg) {
            // Not really doing this??? <- will refactor eventually ;)
            alert(msg);
        }

        function viewVisitors() {
            window.clearInterval(chatTimerId);
            currentChatId = null;

            $('.chat-item.selected').removeClass('selected');
            $('#chat-session').html(model.visitors);
        }

        function getMsgs() {
            if (currentChatId != null && currentChatId != '') {
                $.post('/chat/pollmsgs', { id: currentChatId, lastId: lastMsgId }, function (data) {
                    if (data.lastId > lastMsgId) {
                        if (data.beep) {
                            //document.getElementById('snd-newmsg').play();
                        }

                        lastMsgId = data.lastId;

                        for (i = 0; i < data.msgs.length; i++) {
                            $('#chatBody').append('<p><strong>' + data.msgs[i].FromName + '</strong>: ' + data.msgs[i].Message + '</p>');
                        }

                        $("#chatBody").scrollTop($("#chatBody")[0].scrollHeight);
                    }
                });
            }
        }
    </script>

    <style type="text/css">
    body { margin: 0px; font-family: Arial; color: Black; }
    .clear { clear: both; }
    .btn
    {
        border-radius: 5px;
        background-color: #c0c0c0;
        border: 1px solid black;
        text-align: center;
        padding: 4px;
        font-weight: bold;
        text-decoration: none;
        font-size: small;
        color: Black;
    }
    .btn:hover
    {
        background-color: Orange;
    }
    #header
    {
        border-bottom: 1px solid black;
        height: 75px;
        padding: 5px;        
    }
    #op
    {
        float: left;
        width: 225px;
    }
    #op-status
    {
        float: left;
        vertical-align: middle;
    }
    #branding
    {
        float: right;
        padding-right: 25px;
    }
    #chat-list
    {
        background-color: #c0c0c0;
        border-right: 1px solid black;
        float: left;
        width: 275px;
    }
    .chat-item
    {
        border-bottom: 1px solid black;
        height: 100px;
        padding: 3px;
        font-size: small;
        cursor: pointer;
    }
    .chat-item.selected
    {
        background-color: White;
    }
    .chat-item span
    {
        background-color: Red;
        color: White;
        padding: 2px;
        font-weight: bold;
        margin-left: 65px;
    }
    #chat-session
    {
        float: left;
        padding-left: 30px;
    }
    #chat-session p { font-size: small; }
    #chatBody
	{
		width: 650px;
		height: 400px;
		border: 1px solid #c0c0c0;
	    border-radius: 3px;
		padding: 5px;
		overflow: auto;
	}
	input[type=text]
	{
	    border: 1px solid #c0c0c0;
	    border-radius: 3px;
	    padding: 2px;
	}
    </style>
</head>
<body>
    <div>
        <div id="header">
            <div id="op">
                <h1>@Model.DisplayName</h1>
            </div>
            <div id="op-status">
                <br />
                <a href="#" class="btn view-visitors">Real-time traffic view</a>
                <a href="#" class="btn change-status" data-state="@(Model.IsOnline ? 0 : 1)">
                Current status: @(Model.IsOnline ? "online" : "offline")
                </a>
            </div>
            <div id="branding">
                <img src="/content/lcsk_logo.jpg" alt="LCSK" />
            </div>
        </div>
        <div class="clear"></div>
        <div id="chat-list">
            
        </div>
        <div id="chat-session">
            
        </div>
    </div>
</body>
</html>
