//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LiveChat.WebSite.ChatServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatServiceReference.IChatService")]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/RequestChat", ReplyAction="http://tempuri.org/IChatService/RequestChatResponse")]
        string RequestChat(LiveChat.Entities.ChatRequestEntity request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/WriteMessage", ReplyAction="http://tempuri.org/IChatService/WriteMessageResponse")]
        void WriteMessage(LiveChat.Entities.MessageEntity msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetMessages", ReplyAction="http://tempuri.org/IChatService/GetMessagesResponse")]
        LiveChat.Entities.MessageEntity[] GetMessages(string channelId, long lastId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/RemoveChatRequest", ReplyAction="http://tempuri.org/IChatService/RemoveChatRequestResponse")]
        void RemoveChatRequest(int requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/HasNewMessage", ReplyAction="http://tempuri.org/IChatService/HasNewMessageResponse")]
        bool HasNewMessage(string channelId, long lastId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IChatServiceChannel : LiveChat.WebSite.ChatServiceReference.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.ClientBase<LiveChat.WebSite.ChatServiceReference.IChatService>, LiveChat.WebSite.ChatServiceReference.IChatService {
        
        public ChatServiceClient() {
        }
        
        public ChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RequestChat(LiveChat.Entities.ChatRequestEntity request) {
            return base.Channel.RequestChat(request);
        }
        
        public void WriteMessage(LiveChat.Entities.MessageEntity msg) {
            base.Channel.WriteMessage(msg);
        }
        
        public LiveChat.Entities.MessageEntity[] GetMessages(string channelId, long lastId) {
            return base.Channel.GetMessages(channelId, lastId);
        }
        
        public void RemoveChatRequest(int requestId) {
            base.Channel.RemoveChatRequest(requestId);
        }
        
        public bool HasNewMessage(string channelId, long lastId) {
            return base.Channel.HasNewMessage(channelId, lastId);
        }
    }
}
